# .github/workflows/pages-preview.yml
name: Preview website for Pull Requests

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pages-preview-${{ github.event.pull_request.number }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PR_SLUG: "pr-${{ github.event.pull_request.number }}"
      REPO_NAME: "${{ github.event.repository.name }}"
      # If this is a user/org page repo (<owner>.github.io), the base is "/pr-XX/"
      # Otherwise project pages live under "/<repo>/pr-XX/"
      BASE_PATH: ${{ endsWith(github.event.repository.name, '.github.io') && format('/{0}/', 'pr-' + github.event.pull_request.number) || format('/{0}/{1}/', github.event.repository.name, 'pr-' + github.event.pull_request.number) }}

      # Vite env
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          # pin if your repo expects a specific pnpm major (e.g., 8):
          corepack prepare pnpm@8 --activate

      - name: Install dependencies (monorepo root)
        run: pnpm install --frozen-lockfile

      - name: Build @cuptrail/web (Vite) with PR base path
        run: |
          echo "Using base: ${BASE_PATH}"
          pnpm -F @cuptrail/web build -- --base="${BASE_PATH}"

      - name: Stage artifact in PR subfolder
        run: |
          rm -rf preview
          mkdir -p preview/${PR_SLUG}
          cp -R apps/web/dist/* preview/${PR_SLUG}/
          # GitHub Pages routing conveniences
          touch preview/.nojekyll
          # SPA fallback
          cp preview/${PR_SLUG}/index.html preview/${PR_SLUG}/404.html

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: preview

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages (Preview)
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment preview URL on PR
        uses: actions/github-script@v7
        with:
          script: |
            const pageUrl = `${{ steps.deployment.outputs.page_url }}`; // ends with /
            const prNum = ${{ github.event.pull_request.number }};
            const previewUrl = `${pageUrl}pr-${prNum}/`;
            const marker = '<!-- preview-url-comment -->';
            const body = `${marker}\nðŸš€ Preview deployed: ${previewUrl}`;
            const { owner, repo } = context.repo;

            const { data: comments } = await github.rest.issues.listComments({
              owner, repo, issue_number: prNum,
            });
            const existing = comments.find(c => c.body && c.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({
                owner, repo, comment_id: existing.id, body,
              });
            } else {
              await github.rest.issues.createComment({
                owner, repo, issue_number: prNum, body,
              });
            }